This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-10-06T13:47:07.495Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
.env.example
.gitignore
client/.gitignore
client/package.json
client/public/index.html
client/public/manifest.json
client/public/robots.txt
client/README.md
client/src/apolloClient.jsx
client/src/App.jsx
client/src/Header.jsx
client/src/index.css
client/src/index.jsx
client/src/Products.jsx
composer.json
composer.lock
data.json
package.json
public/.htaccess
public/index.php
public/test.php
README.md
scandi_base.sql
src/Controller/GraphQLController.php
src/Database/Connection.php
src/GraphQL/Resolvers/Resolvers.php
src/GraphQL/Schema/Schema.graphql
src/GraphQL/Types/AttributeInputType.php
src/GraphQL/Types/AttributeItemType.php
src/GraphQL/Types/AttributeType.php
src/GraphQL/Types/CartItemInputType.php
src/GraphQL/Types/CartItemType.php
src/GraphQL/Types/CategoryType.php
src/GraphQL/Types/CurrencyType.php
src/GraphQL/Types/MutationType.php
src/GraphQL/Types/OrderItemType.php
src/GraphQL/Types/OrderType.php
src/GraphQL/Types/PriceType.php
src/GraphQL/Types/ProductType.php
src/GraphQL/Types/QueryType.php
src/GraphQL/Types/TypeRegistry.php
src/Model/CartItem.php
src/Model/Category.php
src/Model/Model.php
src/Model/Order.php
src/Model/Product.php

================================================================
Repository Files
================================================================

================
File: .env.example
================
DB_HOST=localhost
DB_NAME=scandi_base
DB_USER=your_db_user
DB_PASS=your_db_password

APP_ENV=development
APP_DEBUG=true

================
File: .gitignore
================
/vendor/
.env
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components 
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

================
File: client/.gitignore
================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*

================
File: client/package.json
================
{
  "name": "client",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@apollo/client": "^3.11.8",
    "@testing-library/jest-dom": "^6.5.0",
    "@testing-library/react": "^16.0.1",
    "@testing-library/user-event": "^14.5.2",
    "graphql": "^16.9.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "web-vitals": "^4.2.3"
  },
  "devDependencies": {
    "react-scripts": "^5.0.1"
  },
  "scripts": {
    "start": "react-scripts start",
    "build": "react-scripts build",
    "test": "react-scripts test",
    "eject": "react-scripts eject"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}

================
File: client/public/index.html
================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
    <title>React App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

================
File: client/public/manifest.json
================
{
    "short_name": "Scandiweb Test",
    "name": "Scandiweb Test Application",
    "start_url": ".",
    "display": "standalone",
    "theme_color": "#000000",
    "background_color": "#ffffff"
  }

================
File: client/public/robots.txt
================
# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

================
File: client/README.md
================
# Getting Started with Create React App

This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).

## Available Scripts

In the project directory, you can run:

### `npm start`

Runs the app in the development mode.\
Open [http://localhost:3000](http://localhost:3000) to view it in your browser.

The page will reload when you make changes.\
You may also see any lint errors in the console.

### `npm test`

Launches the test runner in the interactive watch mode.\
See the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.

### `npm run build`

Builds the app for production to the `build` folder.\
It correctly bundles React in production mode and optimizes the build for the best performance.

The build is minified and the filenames include the hashes.\
Your app is ready to be deployed!

See the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.

### `npm run eject`

**Note: this is a one-way operation. Once you `eject`, you can't go back!**

If you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.

Instead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.

You don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.

## Learn More

You can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).

To learn React, check out the [React documentation](https://reactjs.org/).

### Code Splitting

This section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)

### Analyzing the Bundle Size

This section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)

### Making a Progressive Web App

This section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)

### Advanced Configuration

This section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)

### Deployment

This section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)

### `npm run build` fails to minify

This section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)

================
File: client/src/apolloClient.jsx
================
import { ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';

const httpLink = createHttpLink({
    uri: 'http://localhost:8080/graphql',
    credentials: 'same-origin'
  });

const client = new ApolloClient({
    link: httpLink,
    cache: new InMemoryCache()
});

export default client;

================
File: client/src/App.jsx
================
import React from 'react';
import './index.css';
import Header from './Header.jsx';
import ProductGrid from './Products.jsx';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      categoryChangeHandler: null
    };
  }

  setCategoryChangeHandler = (handler) => {
    this.setState({ categoryChangeHandler: handler });
  }

  render() {
    return (
      <div>
        <Header onCategoryChange={this.state.categoryChangeHandler} />
        <ProductGrid onCategoryChange={this.setCategoryChangeHandler} />
      </div>
    );
  }
}

export default App;

================
File: client/src/Header.jsx
================
import React from 'react';
import logo from './assets/a-logo.png';
import cart from './assets/EmptyCart.png';

class Header extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      activeTab: 'all',
    };
  }

  handleClick = (tab) => {
    this.setState({ activeTab: tab });
    if (this.props.onCategoryChange) {
      this.props.onCategoryChange(tab);
    }
  };

  render() {
    const { activeTab } = this.state;

    return (
      <div>
        <ul>
          <li>
            <a
              href="#"
              className={`nav-link ${activeTab === 'all' ? 'active' : ''}`}
              onClick={() => this.handleClick('all')}
            >
              ALL
            </a>
          </li>
          <li>
            <a
              href="#"
              className={`nav-link ${activeTab === 'clothes' ? 'active' : ''}`}
              onClick={() => this.handleClick('clothes')}
            >
              CLOTHES
            </a>
          </li>
          <li>
            <a
              href="#"
              className={`nav-link ${activeTab === 'tech' ? 'active' : ''}`}
              onClick={() => this.handleClick('tech')}
            >
              TECH
            </a>
          </li>
          <li>
            <img src={logo} alt="Logo" className="logo" />
          </li>
          <li>
            <a href="#" className="cart-link">
              <img src={cart} alt="Cart" className="cart" />
            </a>
          </li>
        </ul>

        <div className="category-display">
          <h1>{activeTab.charAt(0).toUpperCase() + activeTab.slice(1)}</h1>
        </div>
      </div>
    );
  }
}

export default Header;

================
File: client/src/index.css
================
/* Header */
ul {
  list-style-type: none;
  margin: 0;
  padding-left: 100px;
  overflow: hidden;
}

li {
  float: left;
}

li a.nav-link {
  display: block;
  color: rgb(0, 0, 0);
  text-align: center;
  padding: 16px;
  text-decoration: none;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 400;
  font-size: large;
  transition: border-color 0.2s, color 0.2s;
  border-bottom: 2px solid transparent;
  padding-bottom: 5px;
  display: inline-block;
}

li a.nav-link:hover {
  border-bottom: 2px solid rgb(0, 255, 0);
  padding-bottom: 5px;
  color: rgb(0, 255, 0);
}

.logo {
  position: absolute;
  top: 20px;
  left: 900px;
}

li a.cart-link {
  border-bottom: none;
  padding-bottom: 0;
}

li a.cart-link:hover {
  border-bottom: none;
  color: inherit;
}

.cart {
  position: absolute;
  top: 30px;
  left: 90%;
}

ul li a.nav-link.active {
  color: rgb(0, 255, 0);
  border-bottom: 2px solid rgb(0, 255, 0);
}

/* Header */

.category-display {
  margin-top: 60px;
  margin-left: 100px
}

.category-display h1 {
  font-size: 36px;
  color: black;
  text-align: left;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 200;
}

/* Products */
.product-container {
  width: 1600px;
  margin: 0 auto;
  padding-left: 52px
}

.product-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 40px;
}

.product-card {
  display: flex;
  flex-direction: column;
  position: relative;
  padding: 16px;
  transition: box-shadow 0.3s ease;
  width: 400px;
  height: 450px;
  box-sizing: border-box;
}

.product-card:hover {
  box-shadow: 0 4px 35px rgba(168, 172, 176, 0.19);
}

.product-image {
  width: 100%;
  height: 80%;
  object-fit: cover;
}

.product-name {
  font-size: 18px;
  font-weight: 300;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.product-price {
  font-weight: 500;
  margin: 5px 0 0;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.out-of-stock-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 80%;
  background-color: rgba(226, 226, 226, 0.7);
  display: flex;
  align-items: center;
  justify-content: center;
  color: black;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-weight: 200;
  font-size: x-large;
  z-index: 10;
}

.out-of-stock {
  z-index: 20;
}

.add-to-cart {
  position: absolute;
  bottom: 72px;
  right: 31px;
  background-color: #5ECE7B;
  border: none;
  color: white;
  width: 52px;
  height: 52px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  box-shadow: 0 4px 11px rgba(29, 31, 34, 0.1);
  opacity: 0;
  transition: opacity 0.3s ease;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

.product-card:hover .add-to-cart {
  opacity: 1;
}

.cart-icon {
  font-size: 24px;
  font-weight: bold;
}
/* Products */

================
File: client/src/index.jsx
================
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import { ApolloProvider } from '@apollo/client';
import client from './apolloClient';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <ApolloProvider client={client}>
      <App />
    </ApolloProvider>
  </React.StrictMode>
);

================
File: client/src/Products.jsx
================
import React from 'react';
import { Query } from '@apollo/client/react/components';
import { gql } from '@apollo/client';
import buy_icon from './assets/circle_icon.png';

const GET_PRODUCTS = gql`
  query GetProducts {
    products {
      id
      name
      inStock
      gallery
      prices {
        amount
        currency {
          symbol
        }
      }
      brand
    }
  }
`;

class ProductCard extends React.Component {
    render() {
        const { product } = this.props;
        const price = product.prices[0]; // Assuming the first price is the default

        return (
            <div className="product-card">
                <img src={product.gallery[0]} alt={product.name} className="product-image" />
                {!product.inStock && (
                    <div className="out-of-stock-overlay">
                        <span className="out-of-stock">OUT OF STOCK</span>
                    </div>
                )}
                <h3 className="product-name">{product.name}</h3>
                <p className="product-price">{price.currency.symbol}{price.amount.toFixed(2)}</p>
                {product.inStock && (
                    <button className="add-to-cart">
                        <img src={buy_icon} alt="Add to cart" className="cart-icon" />
                    </button>
                )}
            </div>
        );
    }
}

class ProductGrid extends React.Component {
    render() {
        return (
            <Query query={GET_PRODUCTS}>
                {({ loading, error, data }) => {
                    if (loading) return <p>Loading...</p>;
                    if (error) return <p>Error: {error.message}</p>;

                    return (
                        <div className="product-container">
                            <div className="product-grid">
                                {data.products.map(product => (
                                    <ProductCard key={product.id} product={product} />
                                ))}
                            </div>
                        </div>
                    );
                }}
            </Query>
        );
    }
}

export default ProductGrid;

================
File: composer.json
================
{
    "name": "scandiweb/fullstack",
    "type": "project",
    "autoload": {
        "psr-4": {
            "App\\": "src/"
        }
    },
    "require": {
        "php": "^7.4|^8.0",
        "nikic/fast-route": "^1.3",
        "webonyx/graphql-php": "^15.2",
        "vlucas/phpdotenv": "^5.6"
    },
    "require-dev": {
        "phpunit/phpunit": "^9.5"
    }
}

================
File: composer.lock
================
{
    "_readme": [
        "This file locks the dependencies of your project to a known state",
        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
        "This file is @generated automatically"
    ],
    "content-hash": "eb21b1c475554763596e3f65d50d55f5",
    "packages": [
        {
            "name": "graham-campbell/result-type",
            "version": "v1.1.3",
            "source": {
                "type": "git",
                "url": "https://github.com/GrahamCampbell/Result-Type.git",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945",
                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "GrahamCampbell\\ResultType\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "An Implementation Of The Result Type",
            "keywords": [
                "Graham Campbell",
                "GrahamCampbell",
                "Result Type",
                "Result-Type",
                "result"
            ],
            "support": {
                "issues": "https://github.com/GrahamCampbell/Result-Type/issues",
                "source": "https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/graham-campbell/result-type",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:45:45+00:00"
        },
        {
            "name": "nikic/fast-route",
            "version": "v1.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/FastRoute.git",
                "reference": "181d480e08d9476e61381e04a71b34dc0432e812"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/FastRoute/zipball/181d480e08d9476e61381e04a71b34dc0432e812",
                "reference": "181d480e08d9476e61381e04a71b34dc0432e812",
                "shasum": ""
            },
            "require": {
                "php": ">=5.4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^4.8.35|~5.7"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/functions.php"
                ],
                "psr-4": {
                    "FastRoute\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov",
                    "email": "nikic@php.net"
                }
            ],
            "description": "Fast request router for PHP",
            "keywords": [
                "router",
                "routing"
            ],
            "support": {
                "issues": "https://github.com/nikic/FastRoute/issues",
                "source": "https://github.com/nikic/FastRoute/tree/master"
            },
            "time": "2018-02-13T20:26:39+00:00"
        },
        {
            "name": "phpoption/phpoption",
            "version": "1.9.3",
            "source": {
                "type": "git",
                "url": "https://github.com/schmittjoh/php-option.git",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54",
                "shasum": ""
            },
            "require": {
                "php": "^7.2.5 || ^8.0"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "1.9-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpOption\\": "src/PhpOption/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "Apache-2.0"
            ],
            "authors": [
                {
                    "name": "Johannes M. Schmitt",
                    "email": "schmittjoh@gmail.com",
                    "homepage": "https://github.com/schmittjoh"
                },
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                }
            ],
            "description": "Option Type for PHP",
            "keywords": [
                "language",
                "option",
                "php",
                "type"
            ],
            "support": {
                "issues": "https://github.com/schmittjoh/php-option/issues",
                "source": "https://github.com/schmittjoh/php-option/tree/1.9.3"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpoption/phpoption",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:41:07+00:00"
        },
        {
            "name": "symfony/polyfill-ctype",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-ctype.git",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638",
                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-ctype": "*"
            },
            "suggest": {
                "ext-ctype": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Ctype\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Gert de Pagter",
                    "email": "BackEndTea@gmail.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for ctype functions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "ctype",
                "polyfill",
                "portable"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-mbstring",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-mbstring.git",
                "reference": "85181ba99b2345b0ef10ce42ecac37612d9fd341"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/85181ba99b2345b0ef10ce42ecac37612d9fd341",
                "reference": "85181ba99b2345b0ef10ce42ecac37612d9fd341",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "provide": {
                "ext-mbstring": "*"
            },
            "suggest": {
                "ext-mbstring": "For best performance"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Mbstring\\": ""
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill for the Mbstring extension",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "mbstring",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "symfony/polyfill-php80",
            "version": "v1.31.0",
            "source": {
                "type": "git",
                "url": "https://github.com/symfony/polyfill-php80.git",
                "reference": "60328e362d4c2c802a54fcbf04f9d3fb892b4cf8"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/60328e362d4c2c802a54fcbf04f9d3fb892b4cf8",
                "reference": "60328e362d4c2c802a54fcbf04f9d3fb892b4cf8",
                "shasum": ""
            },
            "require": {
                "php": ">=7.2"
            },
            "type": "library",
            "extra": {
                "thanks": {
                    "name": "symfony/polyfill",
                    "url": "https://github.com/symfony/polyfill"
                }
            },
            "autoload": {
                "files": [
                    "bootstrap.php"
                ],
                "psr-4": {
                    "Symfony\\Polyfill\\Php80\\": ""
                },
                "classmap": [
                    "Resources/stubs"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Ion Bazan",
                    "email": "ion.bazan@gmail.com"
                },
                {
                    "name": "Nicolas Grekas",
                    "email": "p@tchwork.com"
                },
                {
                    "name": "Symfony Community",
                    "homepage": "https://symfony.com/contributors"
                }
            ],
            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
            "homepage": "https://symfony.com",
            "keywords": [
                "compatibility",
                "polyfill",
                "portable",
                "shim"
            ],
            "support": {
                "source": "https://github.com/symfony/polyfill-php80/tree/v1.31.0"
            },
            "funding": [
                {
                    "url": "https://symfony.com/sponsor",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/fabpot",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-09T11:45:10+00:00"
        },
        {
            "name": "vlucas/phpdotenv",
            "version": "v5.6.1",
            "source": {
                "type": "git",
                "url": "https://github.com/vlucas/phpdotenv.git",
                "reference": "a59a13791077fe3d44f90e7133eb68e7d22eaff2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/vlucas/phpdotenv/zipball/a59a13791077fe3d44f90e7133eb68e7d22eaff2",
                "reference": "a59a13791077fe3d44f90e7133eb68e7d22eaff2",
                "shasum": ""
            },
            "require": {
                "ext-pcre": "*",
                "graham-campbell/result-type": "^1.1.3",
                "php": "^7.2.5 || ^8.0",
                "phpoption/phpoption": "^1.9.3",
                "symfony/polyfill-ctype": "^1.24",
                "symfony/polyfill-mbstring": "^1.24",
                "symfony/polyfill-php80": "^1.24"
            },
            "require-dev": {
                "bamarni/composer-bin-plugin": "^1.8.2",
                "ext-filter": "*",
                "phpunit/phpunit": "^8.5.34 || ^9.6.13 || ^10.4.2"
            },
            "suggest": {
                "ext-filter": "Required to use the boolean validator."
            },
            "type": "library",
            "extra": {
                "bamarni-bin": {
                    "bin-links": true,
                    "forward-command": false
                },
                "branch-alias": {
                    "dev-master": "5.6-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "Dotenv\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Graham Campbell",
                    "email": "hello@gjcampbell.co.uk",
                    "homepage": "https://github.com/GrahamCampbell"
                },
                {
                    "name": "Vance Lucas",
                    "email": "vance@vancelucas.com",
                    "homepage": "https://github.com/vlucas"
                }
            ],
            "description": "Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.",
            "keywords": [
                "dotenv",
                "env",
                "environment"
            ],
            "support": {
                "issues": "https://github.com/vlucas/phpdotenv/issues",
                "source": "https://github.com/vlucas/phpdotenv/tree/v5.6.1"
            },
            "funding": [
                {
                    "url": "https://github.com/GrahamCampbell",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/vlucas/phpdotenv",
                    "type": "tidelift"
                }
            ],
            "time": "2024-07-20T21:52:34+00:00"
        },
        {
            "name": "webonyx/graphql-php",
            "version": "v15.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/webonyx/graphql-php.git",
                "reference": "6b02da9313065889eb783d623567476500a572ef"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/webonyx/graphql-php/zipball/6b02da9313065889eb783d623567476500a572ef",
                "reference": "6b02da9313065889eb783d623567476500a572ef",
                "shasum": ""
            },
            "require": {
                "ext-json": "*",
                "ext-mbstring": "*",
                "php": "^7.4 || ^8"
            },
            "require-dev": {
                "amphp/amp": "^2.6",
                "dms/phpunit-arraysubset-asserts": "^0.4",
                "ergebnis/composer-normalize": "^2.28",
                "mll-lab/php-cs-fixer-config": "^5.0",
                "nyholm/psr7": "^1.5",
                "phpbench/phpbench": "^1.2",
                "phpstan/extension-installer": "^1.1",
                "phpstan/phpstan": "1.10.3",
                "phpstan/phpstan-phpunit": "1.3.8",
                "phpstan/phpstan-strict-rules": "1.5.0",
                "phpunit/phpunit": "^9.5",
                "psr/http-message": "^1",
                "react/http": "^1.6",
                "react/promise": "^2.9",
                "symfony/polyfill-php81": "^1.23",
                "symfony/var-exporter": "^5 || ^6",
                "thecodingmachine/safe": "^1.3 || ^2"
            },
            "suggest": {
                "psr/http-message": "To use standard GraphQL server",
                "react/promise": "To leverage async resolving on React PHP platform"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "GraphQL\\": "src/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "A PHP port of GraphQL reference implementation",
            "homepage": "https://github.com/webonyx/graphql-php",
            "keywords": [
                "api",
                "graphql"
            ],
            "support": {
                "issues": "https://github.com/webonyx/graphql-php/issues",
                "source": "https://github.com/webonyx/graphql-php/tree/v15.2.1"
            },
            "funding": [
                {
                    "url": "https://opencollective.com/webonyx-graphql-php",
                    "type": "open_collective"
                }
            ],
            "time": "2023-02-28T13:00:18+00:00"
        }
    ],
    "packages-dev": [
        {
            "name": "doctrine/instantiator",
            "version": "2.0.0",
            "source": {
                "type": "git",
                "url": "https://github.com/doctrine/instantiator.git",
                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
                "reference": "c6222283fa3f4ac679f8b9ced9a4e23f163e80d0",
                "shasum": ""
            },
            "require": {
                "php": "^8.1"
            },
            "require-dev": {
                "doctrine/coding-standard": "^11",
                "ext-pdo": "*",
                "ext-phar": "*",
                "phpbench/phpbench": "^1.2",
                "phpstan/phpstan": "^1.9.4",
                "phpstan/phpstan-phpunit": "^1.3",
                "phpunit/phpunit": "^9.5.27",
                "vimeo/psalm": "^5.4"
            },
            "type": "library",
            "autoload": {
                "psr-4": {
                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "authors": [
                {
                    "name": "Marco Pivetta",
                    "email": "ocramius@gmail.com",
                    "homepage": "https://ocramius.github.io/"
                }
            ],
            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
            "homepage": "https://www.doctrine-project.org/projects/instantiator.html",
            "keywords": [
                "constructor",
                "instantiate"
            ],
            "support": {
                "issues": "https://github.com/doctrine/instantiator/issues",
                "source": "https://github.com/doctrine/instantiator/tree/2.0.0"
            },
            "funding": [
                {
                    "url": "https://www.doctrine-project.org/sponsorship.html",
                    "type": "custom"
                },
                {
                    "url": "https://www.patreon.com/phpdoctrine",
                    "type": "patreon"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator",
                    "type": "tidelift"
                }
            ],
            "time": "2022-12-30T00:23:10+00:00"
        },
        {
            "name": "myclabs/deep-copy",
            "version": "1.12.0",
            "source": {
                "type": "git",
                "url": "https://github.com/myclabs/DeepCopy.git",
                "reference": "3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c",
                "reference": "3a6b9a42cd8f8771bd4295d13e1423fa7f3d942c",
                "shasum": ""
            },
            "require": {
                "php": "^7.1 || ^8.0"
            },
            "conflict": {
                "doctrine/collections": "<1.6.8",
                "doctrine/common": "<2.13.3 || >=3 <3.2.2"
            },
            "require-dev": {
                "doctrine/collections": "^1.6.8",
                "doctrine/common": "^2.13.3 || ^3.2.2",
                "phpspec/prophecy": "^1.10",
                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
            },
            "type": "library",
            "autoload": {
                "files": [
                    "src/DeepCopy/deep_copy.php"
                ],
                "psr-4": {
                    "DeepCopy\\": "src/DeepCopy/"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "MIT"
            ],
            "description": "Create deep copies (clones) of your objects",
            "keywords": [
                "clone",
                "copy",
                "duplicate",
                "object",
                "object graph"
            ],
            "support": {
                "issues": "https://github.com/myclabs/DeepCopy/issues",
                "source": "https://github.com/myclabs/DeepCopy/tree/1.12.0"
            },
            "funding": [
                {
                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
                    "type": "tidelift"
                }
            ],
            "time": "2024-06-12T14:39:25+00:00"
        },
        {
            "name": "nikic/php-parser",
            "version": "v5.3.0",
            "source": {
                "type": "git",
                "url": "https://github.com/nikic/PHP-Parser.git",
                "reference": "3abf7425cd284141dc5d8d14a9ee444de3345d1a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/3abf7425cd284141dc5d8d14a9ee444de3345d1a",
                "reference": "3abf7425cd284141dc5d8d14a9ee444de3345d1a",
                "shasum": ""
            },
            "require": {
                "ext-ctype": "*",
                "ext-json": "*",
                "ext-tokenizer": "*",
                "php": ">=7.4"
            },
            "require-dev": {
                "ircmaxell/php-yacc": "^0.0.7",
                "phpunit/phpunit": "^9.0"
            },
            "bin": [
                "bin/php-parse"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "psr-4": {
                    "PhpParser\\": "lib/PhpParser"
                }
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Nikita Popov"
                }
            ],
            "description": "A PHP parser written in PHP",
            "keywords": [
                "parser",
                "php"
            ],
            "support": {
                "issues": "https://github.com/nikic/PHP-Parser/issues",
                "source": "https://github.com/nikic/PHP-Parser/tree/v5.3.0"
            },
            "time": "2024-09-29T13:56:26+00:00"
        },
        {
            "name": "phar-io/manifest",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/manifest.git",
                "reference": "54750ef60c58e43759730615a392c31c80e23176"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/manifest/zipball/54750ef60c58e43759730615a392c31c80e23176",
                "reference": "54750ef60c58e43759730615a392c31c80e23176",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-phar": "*",
                "ext-xmlwriter": "*",
                "phar-io/version": "^3.0.1",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
            "support": {
                "issues": "https://github.com/phar-io/manifest/issues",
                "source": "https://github.com/phar-io/manifest/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:33:53+00:00"
        },
        {
            "name": "phar-io/version",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/phar-io/version.git",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
                "shasum": ""
            },
            "require": {
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Heuer",
                    "email": "sebastian@phpeople.de",
                    "role": "Developer"
                },
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "Developer"
                }
            ],
            "description": "Library for handling version information and constraints",
            "support": {
                "issues": "https://github.com/phar-io/version/issues",
                "source": "https://github.com/phar-io/version/tree/3.2.1"
            },
            "time": "2022-02-21T01:04:05+00:00"
        },
        {
            "name": "phpunit/php-code-coverage",
            "version": "9.2.32",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
                "reference": "85402a822d1ecf1db1096959413d35e1c37cf1a5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/85402a822d1ecf1db1096959413d35e1c37cf1a5",
                "reference": "85402a822d1ecf1db1096959413d35e1c37cf1a5",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-libxml": "*",
                "ext-xmlwriter": "*",
                "nikic/php-parser": "^4.19.1 || ^5.1.0",
                "php": ">=7.3",
                "phpunit/php-file-iterator": "^3.0.6",
                "phpunit/php-text-template": "^2.0.4",
                "sebastian/code-unit-reverse-lookup": "^2.0.3",
                "sebastian/complexity": "^2.0.3",
                "sebastian/environment": "^5.1.5",
                "sebastian/lines-of-code": "^1.0.4",
                "sebastian/version": "^3.0.2",
                "theseer/tokenizer": "^1.2.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.6"
            },
            "suggest": {
                "ext-pcov": "PHP extension that provides line coverage",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "9.2.x-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
            "keywords": [
                "coverage",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
                "security": "https://github.com/sebastianbergmann/php-code-coverage/security/policy",
                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.32"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-08-22T04:23:01+00:00"
        },
        {
            "name": "phpunit/php-file-iterator",
            "version": "3.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
            "keywords": [
                "filesystem",
                "iterator"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2021-12-02T12:48:52+00:00"
        },
        {
            "name": "phpunit/php-invoker",
            "version": "3.1.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-invoker.git",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "ext-pcntl": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-pcntl": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Invoke callables with a timeout",
            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
            "keywords": [
                "process"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
                "source": "https://github.com/sebastianbergmann/php-invoker/tree/3.1.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:58:55+00:00"
        },
        {
            "name": "phpunit/php-text-template",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-text-template.git",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Simple template engine.",
            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
            "keywords": [
                "template"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
                "source": "https://github.com/sebastianbergmann/php-text-template/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T05:33:50+00:00"
        },
        {
            "name": "phpunit/php-timer",
            "version": "5.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/php-timer.git",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Utility class for timing",
            "homepage": "https://github.com/sebastianbergmann/php-timer/",
            "keywords": [
                "timer"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
                "source": "https://github.com/sebastianbergmann/php-timer/tree/5.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:16:10+00:00"
        },
        {
            "name": "phpunit/phpunit",
            "version": "9.6.21",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/phpunit.git",
                "reference": "de6abf3b6f8dd955fac3caad3af7a9504e8c2ffa"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/de6abf3b6f8dd955fac3caad3af7a9504e8c2ffa",
                "reference": "de6abf3b6f8dd955fac3caad3af7a9504e8c2ffa",
                "shasum": ""
            },
            "require": {
                "doctrine/instantiator": "^1.5.0 || ^2",
                "ext-dom": "*",
                "ext-json": "*",
                "ext-libxml": "*",
                "ext-mbstring": "*",
                "ext-xml": "*",
                "ext-xmlwriter": "*",
                "myclabs/deep-copy": "^1.12.0",
                "phar-io/manifest": "^2.0.4",
                "phar-io/version": "^3.2.1",
                "php": ">=7.3",
                "phpunit/php-code-coverage": "^9.2.32",
                "phpunit/php-file-iterator": "^3.0.6",
                "phpunit/php-invoker": "^3.1.1",
                "phpunit/php-text-template": "^2.0.4",
                "phpunit/php-timer": "^5.0.3",
                "sebastian/cli-parser": "^1.0.2",
                "sebastian/code-unit": "^1.0.8",
                "sebastian/comparator": "^4.0.8",
                "sebastian/diff": "^4.0.6",
                "sebastian/environment": "^5.1.5",
                "sebastian/exporter": "^4.0.6",
                "sebastian/global-state": "^5.0.7",
                "sebastian/object-enumerator": "^4.0.4",
                "sebastian/resource-operations": "^3.0.4",
                "sebastian/type": "^3.2.1",
                "sebastian/version": "^3.0.2"
            },
            "suggest": {
                "ext-soap": "To be able to generate mocks based on WSDL files",
                "ext-xdebug": "PHP extension that provides line coverage as well as branch and path coverage"
            },
            "bin": [
                "phpunit"
            ],
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "9.6-dev"
                }
            },
            "autoload": {
                "files": [
                    "src/Framework/Assert/Functions.php"
                ],
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "The PHP Unit Testing framework.",
            "homepage": "https://phpunit.de/",
            "keywords": [
                "phpunit",
                "testing",
                "xunit"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
                "security": "https://github.com/sebastianbergmann/phpunit/security/policy",
                "source": "https://github.com/sebastianbergmann/phpunit/tree/9.6.21"
            },
            "funding": [
                {
                    "url": "https://phpunit.de/sponsors.html",
                    "type": "custom"
                },
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                },
                {
                    "url": "https://tidelift.com/funding/github/packagist/phpunit/phpunit",
                    "type": "tidelift"
                }
            ],
            "time": "2024-09-19T10:50:18+00:00"
        },
        {
            "name": "sebastian/cli-parser",
            "version": "1.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/cli-parser.git",
                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
                "reference": "2b56bea83a09de3ac06bb18b92f068e60cc6f50b",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for parsing CLI options",
            "homepage": "https://github.com/sebastianbergmann/cli-parser",
            "support": {
                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
                "source": "https://github.com/sebastianbergmann/cli-parser/tree/1.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:27:43+00:00"
        },
        {
            "name": "sebastian/code-unit",
            "version": "1.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit.git",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the PHP code units",
            "homepage": "https://github.com/sebastianbergmann/code-unit",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
                "source": "https://github.com/sebastianbergmann/code-unit/tree/1.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:08:54+00:00"
        },
        {
            "name": "sebastian/code-unit-reverse-lookup",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Looks up which function or method a line of code belongs to",
            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T05:30:19+00:00"
        },
        {
            "name": "sebastian/comparator",
            "version": "4.0.8",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/comparator.git",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/fa0f136dd2334583309d32b62544682ee972b51a",
                "reference": "fa0f136dd2334583309d32b62544682ee972b51a",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/diff": "^4.0",
                "sebastian/exporter": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@2bepublished.at"
                }
            ],
            "description": "Provides the functionality to compare PHP values for equality",
            "homepage": "https://github.com/sebastianbergmann/comparator",
            "keywords": [
                "comparator",
                "compare",
                "equality"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/comparator/issues",
                "source": "https://github.com/sebastianbergmann/comparator/tree/4.0.8"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2022-09-14T12:41:17+00:00"
        },
        {
            "name": "sebastian/complexity",
            "version": "2.0.3",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/complexity.git",
                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/25f207c40d62b8b7aa32f5ab026c53561964053a",
                "reference": "25f207c40d62b8b7aa32f5ab026c53561964053a",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.18 || ^5.0",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for calculating the complexity of PHP code units",
            "homepage": "https://github.com/sebastianbergmann/complexity",
            "support": {
                "issues": "https://github.com/sebastianbergmann/complexity/issues",
                "source": "https://github.com/sebastianbergmann/complexity/tree/2.0.3"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-12-22T06:19:30+00:00"
        },
        {
            "name": "sebastian/diff",
            "version": "4.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/diff.git",
                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/ba01945089c3a293b01ba9badc29ad55b106b0bc",
                "reference": "ba01945089c3a293b01ba9badc29ad55b106b0bc",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3",
                "symfony/process": "^4.2 || ^5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Kore Nordmann",
                    "email": "mail@kore-nordmann.de"
                }
            ],
            "description": "Diff implementation",
            "homepage": "https://github.com/sebastianbergmann/diff",
            "keywords": [
                "diff",
                "udiff",
                "unidiff",
                "unified diff"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/diff/issues",
                "source": "https://github.com/sebastianbergmann/diff/tree/4.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:30:58+00:00"
        },
        {
            "name": "sebastian/environment",
            "version": "5.1.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/environment.git",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "reference": "830c43a844f1f8d5b7a1f6d6076b784454d8b7ed",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-posix": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.1-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides functionality to handle HHVM/PHP environments",
            "homepage": "http://www.github.com/sebastianbergmann/environment",
            "keywords": [
                "Xdebug",
                "environment",
                "hhvm"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/environment/issues",
                "source": "https://github.com/sebastianbergmann/environment/tree/5.1.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:03:51+00:00"
        },
        {
            "name": "sebastian/exporter",
            "version": "4.0.6",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/exporter.git",
                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/78c00df8f170e02473b682df15bfcdacc3d32d72",
                "reference": "78c00df8f170e02473b682df15bfcdacc3d32d72",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-mbstring": "*",
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Volker Dusch",
                    "email": "github@wallbash.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                },
                {
                    "name": "Bernhard Schussek",
                    "email": "bschussek@gmail.com"
                }
            ],
            "description": "Provides the functionality to export PHP variables for visualization",
            "homepage": "https://www.github.com/sebastianbergmann/exporter",
            "keywords": [
                "export",
                "exporter"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/exporter/issues",
                "source": "https://github.com/sebastianbergmann/exporter/tree/4.0.6"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:33:00+00:00"
        },
        {
            "name": "sebastian/global-state",
            "version": "5.0.7",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/global-state.git",
                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
                "reference": "bca7df1f32ee6fe93b4d4a9abbf69e13a4ada2c9",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "ext-dom": "*",
                "phpunit/phpunit": "^9.3"
            },
            "suggest": {
                "ext-uopz": "*"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "5.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Snapshotting of global state",
            "homepage": "http://www.github.com/sebastianbergmann/global-state",
            "keywords": [
                "global state"
            ],
            "support": {
                "issues": "https://github.com/sebastianbergmann/global-state/issues",
                "source": "https://github.com/sebastianbergmann/global-state/tree/5.0.7"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-02T06:35:11+00:00"
        },
        {
            "name": "sebastian/lines-of-code",
            "version": "1.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/e1e4a170560925c26d424b6a03aed157e7dcc5c5",
                "reference": "e1e4a170560925c26d424b6a03aed157e7dcc5c5",
                "shasum": ""
            },
            "require": {
                "nikic/php-parser": "^4.18 || ^5.0",
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "1.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library for counting the lines of code in PHP source code",
            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
            "support": {
                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/1.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-12-22T06:20:34+00:00"
        },
        {
            "name": "sebastian/object-enumerator",
            "version": "4.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71",
                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3",
                "sebastian/object-reflector": "^2.0",
                "sebastian/recursion-context": "^4.0"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:12:34+00:00"
        },
        {
            "name": "sebastian/object-reflector",
            "version": "2.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/object-reflector.git",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "2.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Allows reflection of object attributes, including inherited and non-public ones",
            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
            "support": {
                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
                "source": "https://github.com/sebastianbergmann/object-reflector/tree/2.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-10-26T13:14:26+00:00"
        },
        {
            "name": "sebastian/recursion-context",
            "version": "4.0.5",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/recursion-context.git",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "reference": "e75bd0f07204fec2a0af9b0f3cfe97d05f92efc1",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "4.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                },
                {
                    "name": "Jeff Welch",
                    "email": "whatthejeff@gmail.com"
                },
                {
                    "name": "Adam Harvey",
                    "email": "aharvey@php.net"
                }
            ],
            "description": "Provides functionality to recursively process PHP variables",
            "homepage": "https://github.com/sebastianbergmann/recursion-context",
            "support": {
                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
                "source": "https://github.com/sebastianbergmann/recursion-context/tree/4.0.5"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:07:39+00:00"
        },
        {
            "name": "sebastian/resource-operations",
            "version": "3.0.4",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/resource-operations.git",
                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
                "reference": "05d5692a7993ecccd56a03e40cd7e5b09b1d404e",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.0"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-main": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de"
                }
            ],
            "description": "Provides a list of PHP built-in functions that operate on resources",
            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
            "support": {
                "source": "https://github.com/sebastianbergmann/resource-operations/tree/3.0.4"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2024-03-14T16:00:52+00:00"
        },
        {
            "name": "sebastian/type",
            "version": "3.2.1",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/type.git",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "reference": "75e2c2a32f5e0b3aef905b9ed0b179b953b3d7c7",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "require-dev": {
                "phpunit/phpunit": "^9.5"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.2-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Collection of value objects that represent the types of the PHP type system",
            "homepage": "https://github.com/sebastianbergmann/type",
            "support": {
                "issues": "https://github.com/sebastianbergmann/type/issues",
                "source": "https://github.com/sebastianbergmann/type/tree/3.2.1"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2023-02-03T06:13:03+00:00"
        },
        {
            "name": "sebastian/version",
            "version": "3.0.2",
            "source": {
                "type": "git",
                "url": "https://github.com/sebastianbergmann/version.git",
                "reference": "c6c1022351a901512170118436c764e473f6de8c"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c",
                "reference": "c6c1022351a901512170118436c764e473f6de8c",
                "shasum": ""
            },
            "require": {
                "php": ">=7.3"
            },
            "type": "library",
            "extra": {
                "branch-alias": {
                    "dev-master": "3.0-dev"
                }
            },
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Sebastian Bergmann",
                    "email": "sebastian@phpunit.de",
                    "role": "lead"
                }
            ],
            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
            "homepage": "https://github.com/sebastianbergmann/version",
            "support": {
                "issues": "https://github.com/sebastianbergmann/version/issues",
                "source": "https://github.com/sebastianbergmann/version/tree/3.0.2"
            },
            "funding": [
                {
                    "url": "https://github.com/sebastianbergmann",
                    "type": "github"
                }
            ],
            "time": "2020-09-28T06:39:44+00:00"
        },
        {
            "name": "theseer/tokenizer",
            "version": "1.2.3",
            "source": {
                "type": "git",
                "url": "https://github.com/theseer/tokenizer.git",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2"
            },
            "dist": {
                "type": "zip",
                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "reference": "737eda637ed5e28c3413cb1ebe8bb52cbf1ca7a2",
                "shasum": ""
            },
            "require": {
                "ext-dom": "*",
                "ext-tokenizer": "*",
                "ext-xmlwriter": "*",
                "php": "^7.2 || ^8.0"
            },
            "type": "library",
            "autoload": {
                "classmap": [
                    "src/"
                ]
            },
            "notification-url": "https://packagist.org/downloads/",
            "license": [
                "BSD-3-Clause"
            ],
            "authors": [
                {
                    "name": "Arne Blankerts",
                    "email": "arne@blankerts.de",
                    "role": "Developer"
                }
            ],
            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
            "support": {
                "issues": "https://github.com/theseer/tokenizer/issues",
                "source": "https://github.com/theseer/tokenizer/tree/1.2.3"
            },
            "funding": [
                {
                    "url": "https://github.com/theseer",
                    "type": "github"
                }
            ],
            "time": "2024-03-03T12:36:25+00:00"
        }
    ],
    "aliases": [],
    "minimum-stability": "stable",
    "stability-flags": [],
    "prefer-stable": false,
    "prefer-lowest": false,
    "platform": {
        "php": "^7.4|^8.0"
    },
    "platform-dev": [],
    "plugin-api-version": "2.6.0"
}

================
File: data.json
================
{
    "data": {
        "categories": [
            {
                "name": "all",
                "__typename": "Category"
            },
            {
                "name": "clothes",
                "__typename": "Category"
            },
            {
                "name": "tech",
                "__typename": "Category"
            }
        ],
        "products": [
            {
                "id": "huarache-x-stussy-le",
                "name": "Nike Air Huarache Le",
                "inStock": true,
                "gallery": [
                    "https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087",
                    "https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_1_720x.jpg?v=1612816087",
                    "https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_3_720x.jpg?v=1612816087",
                    "https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_5_720x.jpg?v=1612816087",
                    "https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_4_720x.jpg?v=1612816087"
                ],
                "description": "<p>Great sneakers for everyday use!</p>",
                "category": "clothes",
                "attributes": [
                    {
                        "id": "Size",
                        "items": [
                            {
                                "displayValue": "40",
                                "value": "40",
                                "id": "40",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "41",
                                "value": "41",
                                "id": "41",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "42",
                                "value": "42",
                                "id": "42",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "43",
                                "value": "43",
                                "id": "43",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Size",
                        "type": "text",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 144.69,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Nike x Stussy",
                "__typename": "Product"
            },
            {
                "id": "jacket-canada-goosee",
                "name": "Jacket",
                "inStock": true,
                "gallery": [
                    "https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016105/product-image/2409L_61.jpg",
                    "https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016107/product-image/2409L_61_a.jpg",
                    "https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016108/product-image/2409L_61_b.jpg",
                    "https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016109/product-image/2409L_61_c.jpg",
                    "https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016110/product-image/2409L_61_d.jpg",
                    "https://images.canadagoose.com/image/upload/w_1333,c_scale,f_auto,q_auto:best/v1634058169/product-image/2409L_61_o.png",
                    "https://images.canadagoose.com/image/upload/w_1333,c_scale,f_auto,q_auto:best/v1634058159/product-image/2409L_61_p.png"
                ],
                "description": "<p>Awesome winter jacket</p>",
                "category": "clothes",
                "attributes": [
                    {
                        "id": "Size",
                        "items": [
                            {
                                "displayValue": "Small",
                                "value": "S",
                                "id": "Small",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Medium",
                                "value": "M",
                                "id": "Medium",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Large",
                                "value": "L",
                                "id": "Large",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Extra Large",
                                "value": "XL",
                                "id": "Extra Large",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Size",
                        "type": "text",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 518.47,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Canada Goose",
                "__typename": "Product"
            },
            {
                "id": "ps-5",
                "name": "PlayStation 5",
                "inStock": true,
                "gallery": [
                    "https://images-na.ssl-images-amazon.com/images/I/510VSJ9mWDL._SL1262_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/610%2B69ZsKCL._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/51iPoFwQT3L._SL1230_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/61qbqFcvoNL._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/51HCjA3rqYL._SL1230_.jpg"
                ],
                "description": "<p>A good gaming console. Plays games of PS4! Enjoy if you can buy it mwahahahaha</p>",
                "category": "tech",
                "attributes": [
                    {
                        "id": "Color",
                        "items": [
                            {
                                "displayValue": "Green",
                                "value": "#44FF03",
                                "id": "Green",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Cyan",
                                "value": "#03FFF7",
                                "id": "Cyan",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Blue",
                                "value": "#030BFF",
                                "id": "Blue",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Black",
                                "value": "#000000",
                                "id": "Black",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "White",
                                "value": "#FFFFFF",
                                "id": "White",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Color",
                        "type": "swatch",
                        "__typename": "AttributeSet"
                    },
                    {
                        "id": "Capacity",
                        "items": [
                            {
                                "displayValue": "512G",
                                "value": "512G",
                                "id": "512G",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "1T",
                                "value": "1T",
                                "id": "1T",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Capacity",
                        "type": "text",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 844.02,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Sony",
                "__typename": "Product"
            },
            {
                "id": "xbox-series-s",
                "name": "Xbox Series S 512GB",
                "inStock": false,
                "gallery": [
                    "https://images-na.ssl-images-amazon.com/images/I/71vPCX0bS-L._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/71q7JTbRTpL._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/71iQ4HGHtsL._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/61IYrCrBzxL._SL1500_.jpg",
                    "https://images-na.ssl-images-amazon.com/images/I/61RnXmpAmIL._SL1500_.jpg"
                ],
                "description": "\n<div>\n    <ul>\n        <li><span>Hardware-beschleunigtes Raytracing macht dein Spiel noch realistischer</span></li>\n        <li><span>Spiele Games mit bis zu 120 Bilder pro Sekunde</span></li>\n        <li><span>Minimiere Ladezeiten mit einer speziell entwickelten 512GB NVMe SSD und wechsle mit Quick Resume nahtlos zwischen mehreren Spielen.</span></li>\n        <li><span>Xbox Smart Delivery stellt sicher, dass du die beste Version deines Spiels spielst, egal, auf welcher Konsole du spielst</span></li>\n        <li><span>Spiele deine Xbox One-Spiele auf deiner Xbox Series S weiter. Deine Fortschritte, Erfolge und Freundesliste werden automatisch auf das neue System übertragen.</span></li>\n        <li><span>Erwecke deine Spiele und Filme mit innovativem 3D Raumklang zum Leben</span></li>\n        <li><span>Der brandneue Xbox Wireless Controller zeichnet sich durch höchste Präzision, eine neue Share-Taste und verbesserte Ergonomie aus</span></li>\n        <li><span>Ultra-niedrige Latenz verbessert die Reaktionszeit von Controller zum Fernseher</span></li>\n        <li><span>Verwende dein Xbox One-Gaming-Zubehör -einschließlich Controller, Headsets und mehr</span></li>\n        <li><span>Erweitere deinen Speicher mit der Seagate 1 TB-Erweiterungskarte für Xbox Series X (separat erhältlich) und streame 4K-Videos von Disney+, Netflix, Amazon, Microsoft Movies &amp; TV und mehr</span></li>\n    </ul>\n</div>",
                "category": "tech",
                "attributes": [
                    {
                        "id": "Color",
                        "items": [
                            {
                                "displayValue": "Green",
                                "value": "#44FF03",
                                "id": "Green",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Cyan",
                                "value": "#03FFF7",
                                "id": "Cyan",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Blue",
                                "value": "#030BFF",
                                "id": "Blue",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Black",
                                "value": "#000000",
                                "id": "Black",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "White",
                                "value": "#FFFFFF",
                                "id": "White",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Color",
                        "type": "swatch",
                        "__typename": "AttributeSet"
                    },
                    {
                        "id": "Capacity",
                        "items": [
                            {
                                "displayValue": "512G",
                                "value": "512G",
                                "id": "512G",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "1T",
                                "value": "1T",
                                "id": "1T",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Capacity",
                        "type": "text",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 333.99,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Microsoft",
                "__typename": "Product"
            },
            {
                "id": "apple-imac-2021",
                "name": "iMac 2021",
                "inStock": true,
                "gallery": [
                    "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/imac-24-blue-selection-hero-202104?wid=904&hei=840&fmt=jpeg&qlt=80&.v=1617492405000"
                ],
                "description": "The new iMac!",
                "category": "tech",
                "attributes": [
                    {
                        "id": "Capacity",
                        "items": [
                            {
                                "displayValue": "256GB",
                                "value": "256GB",
                                "id": "256GB",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "512GB",
                                "value": "512GB",
                                "id": "512GB",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Capacity",
                        "type": "text",
                        "__typename": "AttributeSet"
                    },
                    {
                        "id": "With USB 3 ports",
                        "items": [
                            {
                                "displayValue": "Yes",
                                "value": "Yes",
                                "id": "Yes",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "No",
                                "value": "No",
                                "id": "No",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "With USB 3 ports",
                        "type": "text",
                        "__typename": "AttributeSet"
                    },
                    {
                        "id": "Touch ID in keyboard",
                        "items": [
                            {
                                "displayValue": "Yes",
                                "value": "Yes",
                                "id": "Yes",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "No",
                                "value": "No",
                                "id": "No",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Touch ID in keyboard",
                        "type": "text",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 1688.03,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Apple",
                "__typename": "Product"
            },
            {
                "id": "apple-iphone-12-pro",
                "name": "iPhone 12 Pro",
                "inStock": true,
                "gallery": [
                    "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/iphone-12-pro-family-hero?wid=940&amp;hei=1112&amp;fmt=jpeg&amp;qlt=80&amp;.v=1604021663000"
                ],
                "description": "This is iPhone 12. Nothing else to say.",
                "category": "tech",
                "attributes": [
                    {
                        "id": "Capacity",
                        "items": [
                            {
                                "displayValue": "512G",
                                "value": "512G",
                                "id": "512G",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "1T",
                                "value": "1T",
                                "id": "1T",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Capacity",
                        "type": "text",
                        "__typename": "AttributeSet"
                    },
                    {
                        "id": "Color",
                        "items": [
                            {
                                "displayValue": "Green",
                                "value": "#44FF03",
                                "id": "Green",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Cyan",
                                "value": "#03FFF7",
                                "id": "Cyan",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Blue",
                                "value": "#030BFF",
                                "id": "Blue",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "Black",
                                "value": "#000000",
                                "id": "Black",
                                "__typename": "Attribute"
                            },
                            {
                                "displayValue": "White",
                                "value": "#FFFFFF",
                                "id": "White",
                                "__typename": "Attribute"
                            }
                        ],
                        "name": "Color",
                        "type": "swatch",
                        "__typename": "AttributeSet"
                    }
                ],
                "prices": [
                    {
                        "amount": 1000.76,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Apple",
                "__typename": "Product"
            },
            {
                "id": "apple-airpods-pro",
                "name": "AirPods Pro",
                "inStock": false,
                "gallery": [
                    "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/MWP22?wid=572&hei=572&fmt=jpeg&qlt=95&.v=1591634795000"
                ],
                "description": "\n<h3>Magic like you’ve never heard</h3>\n<p>AirPods Pro have been designed to deliver Active Noise Cancellation for immersive sound, Transparency mode so you can hear your surroundings, and a customizable fit for all-day comfort. Just like AirPods, AirPods Pro connect magically to your iPhone or Apple Watch. And they’re ready to use right out of the case.\n\n<h3>Active Noise Cancellation</h3>\n<p>Incredibly light noise-cancelling headphones, AirPods Pro block out your environment so you can focus on what you’re listening to. AirPods Pro use two microphones, an outward-facing microphone and an inward-facing microphone, to create superior noise cancellation. By continuously adapting to the geometry of your ear and the fit of the ear tips, Active Noise Cancellation silences the world to keep you fully tuned in to your music, podcasts, and calls.\n\n<h3>Transparency mode</h3>\n<p>Switch to Transparency mode and AirPods Pro let the outside sound in, allowing you to hear and connect to your surroundings. Outward- and inward-facing microphones enable AirPods Pro to undo the sound-isolating effect of the silicone tips so things sound and feel natural, like when you’re talking to people around you.</p>\n\n<h3>All-new design</h3>\n<p>AirPods Pro offer a more customizable fit with three sizes of flexible silicone tips to choose from. With an internal taper, they conform to the shape of your ear, securing your AirPods Pro in place and creating an exceptional seal for superior noise cancellation.</p>\n\n<h3>Amazing audio quality</h3>\n<p>A custom-built high-excursion, low-distortion driver delivers powerful bass. A superefficient high dynamic range amplifier produces pure, incredibly clear sound while also extending battery life. And Adaptive EQ automatically tunes music to suit the shape of your ear for a rich, consistent listening experience.</p>\n\n<h3>Even more magical</h3>\n<p>The Apple-designed H1 chip delivers incredibly low audio latency. A force sensor on the stem makes it easy to control music and calls and switch between Active Noise Cancellation and Transparency mode. Announce Messages with Siri gives you the option to have Siri read your messages through your AirPods. And with Audio Sharing, you and a friend can share the same audio stream on two sets of AirPods — so you can play a game, watch a movie, or listen to a song together.</p>\n",
                "category": "tech",
                "attributes": [],
                "prices": [
                    {
                        "amount": 300.23,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Apple",
                "__typename": "Product"
            },
            {
                "id": "apple-airtag",
                "name": "AirTag",
                "inStock": true,
                "gallery": [
                    "https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/airtag-double-select-202104?wid=445&hei=370&fmt=jpeg&qlt=95&.v=1617761672000"
                ],
                "description": "\n<h1>Lose your knack for losing things.</h1>\n<p>AirTag is an easy way to keep track of your stuff. Attach one to your keys, slip another one in your backpack. And just like that, they’re on your radar in the Find My app. AirTag has your back.</p>\n",
                "category": "tech",
                "attributes": [],
                "prices": [
                    {
                        "amount": 120.57,
                        "currency": {
                            "label": "USD",
                            "symbol": "$",
                            "__typename": "Currency"
                        },
                        "__typename": "Price"
                    }
                ],
                "brand": "Apple",
                "__typename": "Product"
            }
        ]
    }
}

================
File: package.json
================
{
  "dependencies": {
    "apollo-server": "^3.13.0",
    "graphql": "^16.9.0",
    "mysql2": "^3.11.3"
  }
}

================
File: public/.htaccess
================
<IfModule mod_rewrite.c>
    <IfModule mod_negotiation.c>
        Options -MultiViews -Indexes
    </IfModule>

    RewriteEngine On

    # Redirect Trailing Slashes If Not A Folder...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_URI} (.+)/$
    RewriteRule ^ %1 [L,R=301]

    # Handle Front Controller...
    RewriteCond %{REQUEST_FILENAME} !-d
    RewriteCond %{REQUEST_FILENAME} !-f
    RewriteRule ^ index.php [L]

    # Handle CORS
    <IfModule mod_headers.c>
        Header set Access-Control-Allow-Origin "*"
        Header set Access-Control-Allow-Methods "GET, POST, OPTIONS"
        Header set Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept"
    </IfModule>
</IfModule>

================
File: public/index.php
================
<?php
require_once __DIR__ . '/../vendor/autoload.php';

// Load environment variables
$dotenv = Dotenv\Dotenv::createImmutable(__DIR__ . '/..');
$dotenv->load();

// The rest of your application code...

$dispatcher = FastRoute\simpleDispatcher(function (FastRoute\RouteCollector $r) {
    $r->addRoute(['GET', 'POST'], '/graphql', [App\Controller\GraphQLController::class, 'handle']);
});

$routeInfo = $dispatcher->dispatch(
    $_SERVER['REQUEST_METHOD'],
    $_SERVER['REQUEST_URI']
);

switch ($routeInfo[0]) {
    case FastRoute\Dispatcher::NOT_FOUND:
        echo '404 Not Found';
        break;
    case FastRoute\Dispatcher::METHOD_NOT_ALLOWED:
        echo '405 Method Not Allowed';
        break;
    case FastRoute\Dispatcher::FOUND:
        $handler = $routeInfo[1];
        $vars = $routeInfo[2];
        [$controller, $method] = $handler;
        $controllerInstance = new $controller();
        echo $controllerInstance->$method($vars);
        break;
    default:
        echo 'An error occurred.';
        break;
}

================
File: public/test.php
================
<?php
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

// Set the GraphQL endpoint (make sure this matches your route)
$url = 'http://localhost:8080/graphql';  // Adjust this to your actual GraphQL endpoint

// Define the GraphQL query you want to test
$query = '{
  __schema {
    types {
      name
    }
  }
}';

// Set up the request payload
$data = json_encode(['query' => $query]);

// Initialize cURL
$ch = curl_init();

// Set cURL options
curl_setopt($ch, CURLOPT_URL, $url);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch, CURLOPT_HTTPHEADER, [
  'Content-Type: application/json',
  'Content-Length: ' . strlen($data)
]);
curl_setopt($ch, CURLOPT_POSTFIELDS, $data);

// Execute the request
$response = curl_exec($ch);

// Check for cURL errors
if ($response === false) {
  echo 'cURL error: ' . curl_error($ch);
} else {
  // Output the raw response
  echo '<pre>';
  var_dump($response);  // Use var_dump to see the raw response.
  echo '</pre>';
}

// Close cURL
curl_close($ch);

================
File: README.md
================
My attempt at the scandiweb test for junior full stack dev position.

================
File: scandi_base.sql
================
-- Drop and recreate the database
DROP DATABASE IF EXISTS scandi_base;
CREATE DATABASE scandi_base;
USE scandi_base;

-- Create tables
CREATE TABLE categories (
    category_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL
);

CREATE TABLE products (
    product_id VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    is_in_stock BOOLEAN DEFAULT TRUE,
    gallery JSON,
    description TEXT,
    category_id INT,
    brand VARCHAR(255),
    FOREIGN KEY (category_id) REFERENCES categories(category_id) ON DELETE SET NULL
);

CREATE TABLE attributes (
    attribute_id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    type ENUM('text', 'swatch') NOT NULL,
    UNIQUE KEY unique_attribute (name, type)
);

CREATE TABLE product_attributes (
    product_attribute_id INT AUTO_INCREMENT PRIMARY KEY,
    product_id VARCHAR(255) NOT NULL,
    attribute_id INT,
    display_value VARCHAR(255) NOT NULL,
    value VARCHAR(255) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE,
    FOREIGN KEY (attribute_id) REFERENCES attributes(attribute_id) ON DELETE SET NULL,
    UNIQUE KEY unique_product_attribute_value (product_id, attribute_id, value)
);

CREATE TABLE currencies (
    currency_code VARCHAR(3) PRIMARY KEY,
    symbol VARCHAR(10) NOT NULL
);

CREATE TABLE prices (
    price_id INT AUTO_INCREMENT PRIMARY KEY,
    amount DECIMAL(10, 2) NOT NULL,
    currency_code VARCHAR(3) NOT NULL,
    product_id VARCHAR(255) NOT NULL,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE CASCADE,
    FOREIGN KEY (currency_code) REFERENCES currencies(currency_code) ON DELETE CASCADE,
    UNIQUE KEY unique_product_price_currency (product_id, currency_code)
);

CREATE TABLE orders (
    order_id INT AUTO_INCREMENT PRIMARY KEY,
    total_amount DECIMAL(10, 2) NOT NULL,
    currency_code VARCHAR(3) NOT NULL,
    status ENUM('pending', 'processing', 'shipped', 'delivered') NOT NULL DEFAULT 'pending',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (currency_code) REFERENCES currencies(currency_code)
);

CREATE TABLE order_items (
    order_item_id INT AUTO_INCREMENT PRIMARY KEY,
    order_id INT NOT NULL,
    product_id VARCHAR(255),
    product_name VARCHAR(255) NOT NULL,
    attribute_values JSON NOT NULL,
    quantity INT UNSIGNED DEFAULT 1,
    paid_amount DECIMAL(10, 2) NOT NULL,
    currency_code VARCHAR(3) NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (order_id) REFERENCES orders(order_id) ON DELETE CASCADE,
    FOREIGN KEY (product_id) REFERENCES products(product_id) ON DELETE SET NULL,
    FOREIGN KEY (currency_code) REFERENCES currencies(currency_code)
);

-- Insert sample data
INSERT INTO categories (name) VALUES
('all'), ('clothes'), ('tech');

INSERT INTO products (product_id, name, is_in_stock, gallery, description, category_id, brand) VALUES
('huarache-x-stussy-le', 'Nike Air Huarache Le', true, '["https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_2_720x.jpg?v=1612816087","https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_1_720x.jpg?v=1612816087","https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_3_720x.jpg?v=1612816087","https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_5_720x.jpg?v=1612816087","https://cdn.shopify.com/s/files/1/0087/6193/3920/products/DD1381200_DEOA_4_720x.jpg?v=1612816087"]', '<p>Great sneakers for everyday use!</p>', (SELECT category_id FROM categories WHERE name = 'clothes'), 'Nike x Stussy'),
('jacket-canada-goosee', 'Jacket', true, '["https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016105/product-image/2409L_61.jpg","https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016107/product-image/2409L_61_a.jpg","https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016108/product-image/2409L_61_b.jpg","https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016109/product-image/2409L_61_c.jpg","https://images.canadagoose.com/image/upload/w_480,c_scale,f_auto,q_auto:best/v1576016110/product-image/2409L_61_d.jpg","https://images.canadagoose.com/image/upload/w_1333,c_scale,f_auto,q_auto:best/v1634058169/product-image/2409L_61_o.png","https://images.canadagoose.com/image/upload/w_1333,c_scale,f_auto,q_auto:best/v1634058159/product-image/2409L_61_p.png"]', '<p>Awesome winter jacket</p>', (SELECT category_id FROM categories WHERE name = 'clothes'), 'Canada Goose'),
('ps-5', 'PlayStation 5', true, '["https://images-na.ssl-images-amazon.com/images/I/510VSJ9mWDL._SL1262_.jpg","https://images-na.ssl-images-amazon.com/images/I/610%2B69ZsKCL._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/51iPoFwQT3L._SL1230_.jpg","https://images-na.ssl-images-amazon.com/images/I/61qbqFcvoNL._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/51HCjA3rqYL._SL1230_.jpg"]', '<p>A good gaming console. Plays games of PS4! Enjoy if you can buy it mwahahahaha</p>', (SELECT category_id FROM categories WHERE name = 'tech'), 'Sony'),
('xbox-series-s', 'Xbox Series S 512GB', false, '["https://images-na.ssl-images-amazon.com/images/I/71vPCX0bS-L._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/71q7JTbRTpL._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/71iQ4HGHtsL._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/61IYrCrBzxL._SL1500_.jpg","https://images-na.ssl-images-amazon.com/images/I/61RnXmpAmIL._SL1500_.jpg"]', '<div><ul><li><span>Hardware-beschleunigtes Raytracing macht dein Spiel noch realistischer</span></li><li><span>Spiele Games mit bis zu 120 Bilder pro Sekunde</span></li><li><span>Minimiere Ladezeiten mit einer speziell entwickelten 512GB NVMe SSD und wechsle mit Quick Resume nahtlos zwischen mehreren Spielen.</span></li><li><span>Xbox Smart Delivery stellt sicher, dass du die beste Version deines Spiels spielst, egal, auf welcher Konsole du spielst</span></li><li><span>Spiele deine Xbox One-Spiele auf deiner Xbox Series S weiter. Deine Fortschritte, Erfolge und Freundesliste werden automatisch auf das neue System übertragen.</span></li><li><span>Erwecke deine Spiele und Filme mit innovativem 3D Raumklang zum Leben</span></li><li><span>Der brandneue Xbox Wireless Controller zeichnet sich durch höchste Präzision, eine neue Share-Taste und verbesserte Ergonomie aus</span></li><li><span>Ultra-niedrige Latenz verbessert die Reaktionszeit von Controller zum Fernseher</span></li><li><span>Verwende dein Xbox One-Gaming-Zubehör -einschließlich Controller, Headsets und mehr</span></li><li><span>Erweitere deinen Speicher mit der Seagate 1 TB-Erweiterungskarte für Xbox Series X (separat erhältlich) und streame 4K-Videos von Disney+, Netflix, Amazon, Microsoft Movies &amp; TV und mehr</span></li></ul></div>', (SELECT category_id FROM categories WHERE name = 'tech'), 'Microsoft'),
('apple-imac-2021', 'iMac 2021', true, '["https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/imac-24-blue-selection-hero-202104?wid=904&hei=840&fmt=jpeg&qlt=80&.v=1617492405000"]', 'The new iMac!', (SELECT category_id FROM categories WHERE name = 'tech'), 'Apple'),
('apple-iphone-12-pro', 'iPhone 12 Pro', true, '["https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/iphone-12-pro-family-hero?wid=940&amp;hei=1112&amp;fmt=jpeg&amp;qlt=80&amp;.v=1604021663000"]', 'This is iPhone 12. Nothing else to say.', (SELECT category_id FROM categories WHERE name = 'tech'), 'Apple'),
('apple-airpods-pro', 'AirPods Pro', false, '["https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/MWP22?wid=572&hei=572&fmt=jpeg&qlt=95&.v=1591634795000"]', '<h3>Magic like you\'ve never heard</h3> <p>AirPods Pro have been designed to deliver Active Noise Cancellation for immersive sound, Transparency mode so you can hear your surroundings, and a customizable fit for all-day comfort. Just like AirPods, AirPods Pro connect magically to your iPhone or Apple Watch. And they\'re ready to use right out of the case.</p> <h3>Active Noise Cancellation</h3> <p>Incredibly light noise-cancelling headphones, AirPods Pro block out your environment so you can focus on what you\'re listening to. AirPods Pro use two microphones, an outward-facing microphone and an inward-facing microphone, to create superior noise cancellation. By continuously adapting to the geometry of your ear and the fit of the ear tips, Active Noise Cancellation silences the world to keep you fully tuned in to your music, podcasts, and calls.</p> <h3>Transparency mode</h3> <p>Switch to Transparency mode and AirPods Pro let the outside sound in, allowing you to hear and connect to your surroundings. Outward- and inward-facing microphones enable AirPods Pro to undo the sound-isolating effect of the silicone tips so things sound and feel natural, like when you\'re talking to people around you.</p>', (SELECT category_id FROM categories WHERE name = 'tech'), 'Apple'),
('apple-airtag', 'AirTag', true, '["https://store.storeimages.cdn-apple.com/4982/as-images.apple.com/is/airtag-double-select-202104?wid=445&hei=370&fmt=jpeg&qlt=95&.v=1617761672000"]', '<h1>Lose your knack for losing things.</h1> <p>AirTag is an easy way to keep track of your stuff. Attach one to your keys, slip another one in your backpack. And just like that, they\'re on your radar in the Find My app. AirTag has your back.</p>', (SELECT category_id FROM categories WHERE name = 'tech'), 'Apple');

INSERT INTO attributes (name, type) VALUES
('size', 'text'),
('color', 'swatch'),
('capacity', 'text'),
('With USB 3 ports', 'text'),
('Touch ID in keyboard', 'text');

INSERT INTO product_attributes (product_id, attribute_id, display_value, value) VALUES
('huarache-x-stussy-le', (SELECT attribute_id FROM attributes WHERE name = 'size'), '40', '40'),
('huarache-x-stussy-le', (SELECT attribute_id FROM attributes WHERE name = 'size'), '41', '41'),
('huarache-x-stussy-le', (SELECT attribute_id FROM attributes WHERE name = 'size'), '42', '42'),
('huarache-x-stussy-le', (SELECT attribute_id FROM attributes WHERE name = 'size'), '43', '43'),
('jacket-canada-goosee', (SELECT attribute_id FROM attributes WHERE name = 'size'), 'Small', 'S'),
('jacket-canada-goosee', (SELECT attribute_id FROM attributes WHERE name = 'size'), 'Medium', 'M'),
('jacket-canada-goosee', (SELECT attribute_id FROM attributes WHERE name = 'size'), 'Large', 'L'),
('jacket-canada-goosee', (SELECT attribute_id FROM attributes WHERE name = 'size'), 'Extra Large', 'XL'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Green', '#44FF03'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Cyan', '#03FFF7'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Blue', '#030BFF'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Black', '#000000'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'White', '#FFFFFF'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '512G', '512G'),
('ps-5', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '1T', '1T'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Green', '#44FF03'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Cyan', '#03FFF7'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Blue', '#030BFF'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Black', '#000000'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'White', '#FFFFFF'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '512G', '512G'),
('xbox-series-s', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '1T', '1T'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '256GB', '256GB'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '512GB', '512GB'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'With USB 3 ports'), 'Yes', 'Yes'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'With USB 3 ports'), 'No', 'No'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'Touch ID in keyboard'), 'Yes', 'Yes'),
('apple-imac-2021', (SELECT attribute_id FROM attributes WHERE name = 'Touch ID in keyboard'), 'No', 'No'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '512G', '512G'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'capacity'), '1T', '1T'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Green', '#44FF03'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Cyan', '#03FFF7'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Blue', '#030BFF'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'Black', '#000000'),
('apple-iphone-12-pro', (SELECT attribute_id FROM attributes WHERE name = 'color'), 'White', '#FFFFFF');

INSERT INTO currencies (currency_code, symbol) VALUES
('USD', '$'),
('EUR', '€');

INSERT INTO prices (amount, currency_code, product_id) VALUES
(144.69, 'USD', 'huarache-x-stussy-le'),
(518.47, 'USD', 'jacket-canada-goosee'),
(844.02, 'USD', 'ps-5'),
(333.99, 'USD', 'xbox-series-s'),
(1600.00, 'USD', 'apple-imac-2021'),
(1000.76, 'USD', 'apple-iphone-12-pro'),
(300.00, 'USD', 'apple-airpods-pro'),
(120.57, 'USD', 'apple-airtag');

INSERT INTO orders (total_amount, currency_code) VALUES (2000.00, 'USD');

SET @last_order_id = LAST_INSERT_ID();

INSERT INTO order_items (order_id, product_id, product_name, attribute_values, quantity, paid_amount, currency_code)
VALUES 
(@last_order_id, 'huarache-x-stussy-le', 'Nike Air Huarache Le', '{"size": "42", "color": "Black"}', 2, 289.38, 'USD'),
(@last_order_id, 'ps-5', 'PlayStation 5', '{"color": "Black", "capacity": "512G"}', 1, 844.02, 'USD'),
(@last_order_id, 'apple-imac-2021', 'iMac 2021', '{"capacity": "512GB", "With USB 3 ports": "Yes", "Touch ID in keyboard": "No"}', 1, 1600.00, 'USD');

================
File: src/Controller/GraphQLController.php
================
<?php

namespace App\Controller;

use GraphQL\GraphQL;
use GraphQL\Type\Schema;
use App\GraphQL\Types\QueryType;
use App\GraphQL\Types\MutationType;
use App\GraphQL\Resolvers\Resolvers;

class GraphQLController
{
    public function handle()
    {
        header("Access-Control-Allow-Origin: *");
        header("Access-Control-Allow-Methods: POST, GET, OPTIONS");
        header("Access-Control-Allow-Headers: Content-Type, Authorization");
        
        if ($_SERVER['REQUEST_METHOD'] == 'OPTIONS') {
            exit(0);
        }

        // Create an instance of your Resolvers class
        $resolvers = new Resolvers();

        // Create the schema using your new QueryType and MutationType
        $schema = new Schema([
            'query' => new QueryType($resolvers),
            'mutation' => new MutationType($resolvers),
        ]);

        $rawInput = file_get_contents('php://input');
        $input = json_decode($rawInput, true);

        if (!isset($input['query'])) {
            $this->respondWithError('Query not provided');
            return;
        }

        $query = $input['query'];
        $variableValues = isset($input['variables']) ? $input['variables'] : null;

        try {
            $result = GraphQL::executeQuery($schema, $query, null, null, $variableValues);
            $output = $result->toArray();
        } catch (\Exception $e) {
            $this->respondWithError('GraphQL execution error: ' . $e->getMessage());
            return;
        }

        $this->respondWithJson($output);
    }

    private function respondWithError($message)
    {
        $this->respondWithJson(['errors' => [['message' => $message]]], 400);
    }

    private function respondWithJson($data, $statusCode = 200)
    {
        header('Content-Type: application/json');
        http_response_code($statusCode);
        echo json_encode($data);
    }
}

================
File: src/Database/Connection.php
================
<?php

namespace App\Database;

use PDO;
use PDOException;
use Exception;

class Connection
{
    private static $instance = null;
    private $conn;

    private function __construct()
    {
        $host = $_ENV['DB_HOST'] ?? 'localhost';
        $db   = $_ENV['DB_NAME'] ?? 'scandi_base';
        $user = $_ENV['DB_USER'] ?? 'root';
        $pass = $_ENV['DB_PASS'] ?? '';
        $charset = 'utf8mb4';

        $dsn = "mysql:host=$host;dbname=$db;charset=$charset";
        $options = [
            PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
            PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
            PDO::ATTR_EMULATE_PREPARES   => false,
        ];

        try {
            $this->conn = new PDO($dsn, $user, $pass, $options);
        } catch (PDOException $e) {
            throw new PDOException($e->getMessage(), (int)$e->getCode());
        }
    }

    public static function getInstance()
    {
        if (self::$instance == null) {
            self::$instance = new Connection();
        }
        return self::$instance;
    }

    public function getConnection()
    {
        return $this->conn;
    }

    // Prevent cloning of the instance
    private function __clone() {}

    // Prevent unserializing of the instance
    public function __wakeup()
    {
        throw new Exception("Cannot unserialize singleton");
    }
}

================
File: src/GraphQL/Resolvers/Resolvers.php
================
<?php

namespace App\GraphQL\Resolvers;

use App\Model\Category;
use App\Model\Product;
use App\Model\CartItem;
use App\Model\Order;

class Resolvers
{
    public function getCategories()
    {
        return Category::all();
    }

    public function getCategory($root, $args)
    {
        return Category::find($args['id']);
    }

    public function getProducts($root, $args)
    {
        if (isset($args['categoryId'])) {
            return Product::where('category_id', $args['categoryId']);
        }
        return Product::all();
    }

    public function getProduct($root, $args)
    {
        return Product::find($args['id']);
    }

    public function addToCart($root, $args)
    {
        $cartItem = new CartItem();
        $id = $cartItem->save([
            'product_id' => $args['productId'],
            'quantity' => 1,
            'attribute_values' => $args['attributeValues']
        ]);
        return CartItem::find($id);
    }

    public function removeFromCart($root, $args)
    {
        $cartItem = new CartItem();
        return $cartItem->delete($args['cartItemId']);
    }

    public function updateCartItemQuantity($root, $args)
    {
        $cartItem = new CartItem();
        $success = $cartItem->update($args['cartItemId'], ['quantity' => $args['quantity']]);
        return $success ? CartItem::find($args['cartItemId']) : null;
    }

    public function placeOrder($root, $args)
    {
        $order = new Order();
        $orderId = $order->save([
            'total_amount' => 0, // Calculate this based on cart items
            'currency_code' => 'USD', // Get this from somewhere
            'status' => 'PENDING',
            'items' => $args['cartItems']
        ]);
        return Order::find($orderId);
    }
}

================
File: src/GraphQL/Schema/Schema.graphql
================
# src/GraphQL/Schema/schema.graphql

type Category {
  id: ID!
  name: String!
  products: [Product!]!
}

type Product {
  id: ID!
  name: String!
  inStock: Boolean!
  gallery: [String!]!
  description: String!
  category: Category!
  brand: String!
  attributes: [Attribute!]!
  prices: [Price!]!
}

type Attribute {
  id: ID!
  name: String!
  type: String!
  items: [AttributeItem!]!
}

type AttributeItem {
  id: ID!
  displayValue: String!
  value: String!
}

type Price {
  amount: Float!
  currency: Currency!
}

type Currency {
  label: String!
  symbol: String!
}

type Query {
  categories: [Category!]!
  category(id: ID!): Category
  products(categoryId: ID): [Product!]!
  product(id: ID!): Product
}

type Mutation {
  addToCart(productId: ID!, attributeValues: [AttributeInput!]!): CartItem!
  removeFromCart(cartItemId: ID!): Boolean!
  updateCartItemQuantity(cartItemId: ID!, quantity: Int!): CartItem!
  placeOrder(cartItems: [CartItemInput!]!): Order!
}

input AttributeInput {
  id: ID!
  value: String!
}

input CartItemInput {
  productId: ID!
  quantity: Int!
  attributeValues: [AttributeInput!]!
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  attributeValues: [AttributeItem!]!
}

type Order {
  id: ID!
  items: [OrderItem!]!
  total: Price!
  status: OrderStatus!
}

type OrderItem {
  product: Product!
  quantity: Int!
  attributeValues: [AttributeItem!]!
  price: Price!
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
}

================
File: src/GraphQL/Types/AttributeInputType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class AttributeInputType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'AttributeItem',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'displayValue' => TypeRegistry::nonNull(TypeRegistry::string()),
                'value' => TypeRegistry::nonNull(TypeRegistry::string()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/AttributeItemType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class AttributeItemType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'AttributeItem',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'displayValue' => TypeRegistry::nonNull(TypeRegistry::string()),
                'value' => TypeRegistry::nonNull(TypeRegistry::string()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/AttributeType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class AttributeType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Attribute',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'name' => TypeRegistry::nonNull(TypeRegistry::string()),
                'type' => TypeRegistry::nonNull(TypeRegistry::string()),
                'items' => TypeRegistry::listOf(TypeRegistry::attributeItem()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/CartItemInputType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\InputObjectType;

class CartItemInputType extends InputObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'CartItemInput',
            'fields' => [
                'productId' => TypeRegistry::nonNull(TypeRegistry::id()),
                'quantity' => TypeRegistry::nonNull(TypeRegistry::int()),
                'attributeValues' => TypeRegistry::listOf(TypeRegistry::attributeInput()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/CartItemType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class CartItemType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'CartItem',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'product' => TypeRegistry::nonNull(TypeRegistry::product()),
                'quantity' => TypeRegistry::nonNull(TypeRegistry::int()),
                'attributeValues' => TypeRegistry::listOf(TypeRegistry::attributeItem()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/CategoryType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class CategoryType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Category',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'name' => TypeRegistry::nonNull(TypeRegistry::string()),
                'products' => TypeRegistry::listOf(TypeRegistry::product()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/CurrencyType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class CurrencyType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Currency',
            'fields' => [
                'label' => TypeRegistry::nonNull(TypeRegistry::string()),
                'symbol' => TypeRegistry::nonNull(TypeRegistry::string()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/MutationType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;
use App\GraphQL\Resolvers\Resolvers;

class MutationType extends ObjectType
{
    public function __construct(Resolvers $resolvers)
    {
        parent::__construct([
            'name' => 'Mutation',
            'fields' => [
                'addToCart' => [
                    'type' => TypeRegistry::cartItem(),
                    'args' => [
                        'productId' => TypeRegistry::nonNull(TypeRegistry::id()),
                        'attributeValues' => TypeRegistry::listOf(TypeRegistry::attributeInput()),
                    ],
                    'resolve' => [$resolvers, 'addToCart'],
                ],
                'removeFromCart' => [
                    'type' => TypeRegistry::boolean(),
                    'args' => ['cartItemId' => TypeRegistry::nonNull(TypeRegistry::id())],
                    'resolve' => [$resolvers, 'removeFromCart'],
                ],
                'updateCartItemQuantity' => [
                    'type' => TypeRegistry::cartItem(),
                    'args' => [
                        'cartItemId' => TypeRegistry::nonNull(TypeRegistry::id()),
                        'quantity' => TypeRegistry::nonNull(TypeRegistry::int()),
                    ],
                    'resolve' => [$resolvers, 'updateCartItemQuantity'],
                ],
                'placeOrder' => [
                    'type' => TypeRegistry::order(),
                    'args' => ['cartItems' => TypeRegistry::listOf(TypeRegistry::cartItemInput())],
                    'resolve' => [$resolvers, 'placeOrder'],
                ],
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/OrderItemType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class OrderItemType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'OrderItem',
            'fields' => [
                'product' => TypeRegistry::nonNull(TypeRegistry::product()),
                'quantity' => TypeRegistry::nonNull(TypeRegistry::int()),
                'attributeValues' => TypeRegistry::listOf(TypeRegistry::attributeItem()),
                'price' => TypeRegistry::nonNull(TypeRegistry::price()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/OrderType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class OrderType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Order',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'items' => TypeRegistry::listOf(TypeRegistry::orderItem()),
                'total' => TypeRegistry::nonNull(TypeRegistry::price()),
                'status' => TypeRegistry::nonNull(TypeRegistry::orderStatus()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/PriceType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class PriceType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Price',
            'fields' => [
                'amount' => TypeRegistry::nonNull(TypeRegistry::float()),
                'currency' => TypeRegistry::nonNull(TypeRegistry::currency()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/ProductType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;

class ProductType extends ObjectType
{
    public function __construct()
    {
        parent::__construct([
            'name' => 'Product',
            'fields' => [
                'id' => TypeRegistry::nonNull(TypeRegistry::id()),
                'name' => TypeRegistry::nonNull(TypeRegistry::string()),
                'inStock' => TypeRegistry::nonNull(TypeRegistry::boolean()),
                'gallery' => TypeRegistry::listOf(TypeRegistry::string()),
                'description' => TypeRegistry::string(),
                'category' => TypeRegistry::category(),
                'brand' => TypeRegistry::string(),
                'attributes' => TypeRegistry::listOf(TypeRegistry::attribute()),
                'prices' => TypeRegistry::listOf(TypeRegistry::price()),
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/QueryType.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\ObjectType;
use App\GraphQL\Resolvers\Resolvers;

class QueryType extends ObjectType
{
    public function __construct(Resolvers $resolvers)
    {
        parent::__construct([
            'name' => 'Query',
            'fields' => [
                'categories' => [
                    'type' => TypeRegistry::listOf(TypeRegistry::category()),
                    'resolve' => [$resolvers, 'getCategories'],
                ],
                'category' => [
                    'type' => TypeRegistry::category(),
                    'args' => ['id' => TypeRegistry::nonNull(TypeRegistry::id())],
                    'resolve' => [$resolvers, 'getCategory'],
                ],
                'products' => [
                    'type' => TypeRegistry::listOf(TypeRegistry::product()),
                    'args' => ['categoryId' => TypeRegistry::id()],
                    'resolve' => [$resolvers, 'getProducts'],
                ],
                'product' => [
                    'type' => TypeRegistry::product(),
                    'args' => ['id' => TypeRegistry::nonNull(TypeRegistry::id())],
                    'resolve' => [$resolvers, 'getProduct'],
                ],
            ],
        ]);
    }
}

================
File: src/GraphQL/Types/TypeRegistry.php
================
<?php

namespace App\GraphQL\Types;

use GraphQL\Type\Definition\Type;
use GraphQL\Type\Definition\EnumType;

class TypeRegistry
{
    private static $types = [];

    public static function string()
    {
        return Type::string();
    }

    public static function int()
    {
        return Type::int();
    }

    public static function float()
    {
        return Type::float();
    }

    public static function boolean()
    {
        return Type::boolean();
    }

    public static function id()
    {
        return Type::id();
    }

    public static function nonNull($type)
    {
        return Type::nonNull($type);
    }

    public static function listOf($type)
    {
        return Type::listOf($type);
    }

    public static function category()
    {
        return self::$types['category'] ??= new CategoryType();
    }

    public static function product()
    {
        return self::$types['product'] ??= new ProductType();
    }

    public static function cartItem()
    {
        return self::$types['cartItem'] ??= new CartItemType();
    }

    public static function order()
    {
        return self::$types['order'] ??= new OrderType();
    }

    public static function attribute()
    {
        return self::$types['attribute'] ??= new AttributeType();
    }

    public static function attributeItem()
    {
        return self::$types['attributeItem'] ??= new AttributeItemType();
    }

    public static function attributeInput()
    {
        return self::$types['attributeInput'] ??= new AttributeInputType();
    }

    public static function price()
    {
        return self::$types['price'] ??= new PriceType();
    }

    public static function orderItem()
    {
        return self::$types['orderItem'] ??= new OrderItemType();
    }

    public static function currency()
    {
        return self::$types['currency'] ??= new CurrencyType();
    }

    public static function orderStatus()
    {
        return self::$types['orderStatus'] ??= new EnumType([
            'name' => 'OrderStatus',
            'values' => [
                'PENDING' => ['value' => 'PENDING'],
                'PROCESSING' => ['value' => 'PROCESSING'],
                'SHIPPED' => ['value' => 'SHIPPED'],
                'DELIVERED' => ['value' => 'DELIVERED'],
            ],
        ]);
    }

    public static function cartItemInput()
    {
        return self::$types['cartItemInput'] ??= new CartItemInputType();
    }
}

================
File: src/Model/CartItem.php
================
<?php

namespace App\Model;

use PDO;
use InvalidArgumentException;

/**
 * CartItem Model
 * 
 * This class represents the CartItem entity and provides methods to interact with the cart_items table.
 */
class CartItem extends Model
{
    /**
     * Find a cart item by its ID
     *
     * @param int $id
     * @return array|null
     * @throws InvalidArgumentException
     */
    public static function find(int $id): ?array
    {
        if ($id <= 0) {
            throw new InvalidArgumentException("Cart item ID must be a positive integer");
        }

        $instance = new self();
        return $instance->fetch("SELECT * FROM cart_items WHERE id = :id", ['id' => $id]);
    }

    /**
     * Save a new cart item
     *
     * @param array $data
     * @return int The ID of the newly created cart item
     * @throws InvalidArgumentException
     */
    public function save(array $data): int
    {
        if (empty($data['product_id']) || empty($data['quantity']) || empty($data['attribute_values'])) {
            throw new InvalidArgumentException("Invalid cart item data");
        }

        $stmt = $this->query("
            INSERT INTO cart_items (product_id, quantity, attribute_values)
            VALUES (:product_id, :quantity, :attribute_values)
        ", [
            'product_id' => $data['product_id'],
            'quantity' => $data['quantity'],
            'attribute_values' => json_encode($data['attribute_values'])
        ]);

        return (int) $this->db->lastInsertId();
    }

    /**
     * Update an existing cart item
     *
     * @param int $id
     * @param array $data
     * @return bool
     * @throws InvalidArgumentException
     */
    public function update(int $id, array $data): bool
    {
        if ($id <= 0 || empty($data['quantity'])) {
            throw new InvalidArgumentException("Invalid update data");
        }

        $stmt = $this->query("
            UPDATE cart_items
            SET quantity = :quantity
            WHERE id = :id
        ", [
            'id' => $id,
            'quantity' => $data['quantity']
        ]);

        return $stmt->rowCount() > 0;
    }

    /**
     * Delete a cart item
     *
     * @param int $id
     * @return bool
     * @throws InvalidArgumentException
     */
    public function delete(int $id): bool
    {
        if ($id <= 0) {
            throw new InvalidArgumentException("Cart item ID must be a positive integer");
        }

        $stmt = $this->query("DELETE FROM cart_items WHERE id = :id", ['id' => $id]);
        return $stmt->rowCount() > 0;
    }
}

================
File: src/Model/Category.php
================
<?php

namespace App\Model;

use PDO;
use InvalidArgumentException;

/**
 * Category Model
 * 
 * This class represents the Category entity and provides methods to interact with the categories table.
 */
class Category extends Model
{
    /**
     * Retrieve all categories
     *
     * @return array
     */
    public static function all(): array
    {
        $instance = new self();
        return $instance->fetchAll("SELECT * FROM categories");
    }

    /**
     * Find a category by its ID
     *
     * @param int $id
     * @return array|null
     * @throws InvalidArgumentException
     */
    public static function find(int $id): ?array
    {
        if ($id <= 0) {
            throw new InvalidArgumentException("Category ID must be a positive integer");
        }

        $instance = new self();
        return $instance->fetch("SELECT * FROM categories WHERE category_id = :id", ['id' => $id]);
    }

    /**
     * Get products for a category
     *
     * @param int $categoryId
     * @return array
     */
    public function products(int $categoryId): array
    {
        return $this->fetchAll("SELECT * FROM products WHERE category_id = :category_id", ['category_id' => $categoryId]);
    }
}

================
File: src/Model/Model.php
================
<?php

namespace App\Model;

use App\Database\Connection;
use PDO;

abstract class Model
{
    protected $db;

    public function __construct()
    {
        $this->db = Connection::getInstance()->getConnection();
    }

    // Common methods that all models might use can go here
    protected function query($sql, $params = [])
    {
        $stmt = $this->db->prepare($sql);
        $stmt->execute($params);
        return $stmt;
    }

    protected function fetch($sql, $params = [])
    {
        return $this->query($sql, $params)->fetch(PDO::FETCH_ASSOC);
    }

    protected function fetchAll($sql, $params = [])
    {
        return $this->query($sql, $params)->fetchAll(PDO::FETCH_ASSOC);
    }
}

================
File: src/Model/Order.php
================
<?php

namespace App\Model;

use PDO;
use InvalidArgumentException;
use Exception;

/**
 * Order Model
 * 
 * This class represents the Order entity and provides methods to interact with the orders table.
 */
class Order extends Model
{
    /**
     * Find an order by its ID
     *
     * @param int $id
     * @return array|null
     * @throws InvalidArgumentException
     */
    public static function find(int $id): ?array
    {
        if ($id <= 0) {
            throw new InvalidArgumentException("Order ID must be a positive integer");
        }

        $instance = new self();
        return $instance->fetch("SELECT * FROM orders WHERE order_id = :id", ['id' => $id]);
    }

    /**
     * Save a new order
     *
     * @param array $data
     * @return int The ID of the newly created order
     * @throws InvalidArgumentException|Exception
     */
    public function save(array $data): int
    {
        if (empty($data['total_amount']) || empty($data['currency_code']) || empty($data['status']) || empty($data['items'])) {
            throw new InvalidArgumentException("Invalid order data");
        }

        $this->db->beginTransaction();

        try {
            $stmt = $this->query("
                INSERT INTO orders (total_amount, currency_code, status)
                VALUES (:total_amount, :currency_code, :status)
            ", [
                'total_amount' => $data['total_amount'],
                'currency_code' => $data['currency_code'],
                'status' => $data['status']
            ]);

            $orderId = (int) $this->db->lastInsertId();

            foreach ($data['items'] as $item) {
                $this->query("
                    INSERT INTO order_items (order_id, product_id, product_name, attribute_values, quantity, paid_amount, currency_code)
                    VALUES (:order_id, :product_id, :product_name, :attribute_values, :quantity, :paid_amount, :currency_code)
                ", [
                    'order_id' => $orderId,
                    'product_id' => $item['product_id'],
                    'product_name' => $item['product_name'],
                    'attribute_values' => json_encode($item['attribute_values']),
                    'quantity' => $item['quantity'],
                    'paid_amount' => $item['paid_amount'],
                    'currency_code' => $item['currency_code']
                ]);
            }

            $this->db->commit();
            return $orderId;
        } catch (Exception $e) {
            $this->db->rollBack();
            throw $e;
        }
    }

    /**
     * Get items for an order
     *
     * @param int $orderId
     * @return array
     * @throws InvalidArgumentException
     */
    public function items(int $orderId): array
    {
        if ($orderId <= 0) {
            throw new InvalidArgumentException("Order ID must be a positive integer");
        }

        return $this->fetchAll("SELECT * FROM order_items WHERE order_id = :order_id", ['order_id' => $orderId]);
    }
}

================
File: src/Model/Product.php
================
<?php

namespace App\Model;

use PDO;
use InvalidArgumentException;

/**
 * Product Model
 * 
 * This class represents the Product entity and provides methods to interact with the products table.
 */
class Product extends Model
{
    /**
     * Retrieve all products
     *
     * @return array
     */
    public static function all(): array
    {
        $instance = new self();
        return $instance->fetchAll("SELECT * FROM products");
    }

    /**
     * Find a product by its ID
     *
     * @param string $id
     * @return array|null
     * @throws InvalidArgumentException
     */
    public static function find(string $id): ?array
    {
        if (empty($id)) {
            throw new InvalidArgumentException("Product ID cannot be empty");
        }

        $instance = new self();
        return $instance->fetch("SELECT * FROM products WHERE product_id = :id", ['id' => $id]);
    }

    /**
     * Find products by a specific column value
     *
     * @param string $column
     * @param mixed $value
     * @return array
     * @throws InvalidArgumentException
     */
    public static function where(string $column, $value): array
    {
        if (empty($column)) {
            throw new InvalidArgumentException("Column name cannot be empty");
        }

        $instance = new self();
        return $instance->fetchAll("SELECT * FROM products WHERE $column = :value", ['value' => $value]);
    }

    /**
     * Get attributes for a product
     *
     * @param string $productId
     * @return array
     */
    public function attributes(string $productId): array
    {
        return $this->fetchAll("
            SELECT a.*, pa.display_value, pa.value
            FROM attributes a
            JOIN product_attributes pa ON a.attribute_id = pa.attribute_id
            WHERE pa.product_id = :product_id
        ", ['product_id' => $productId]);
    }

    /**
     * Get prices for a product
     *
     * @param string $productId
     * @return array
     */
    public function prices(string $productId): array
    {
        return $this->fetchAll("
            SELECT p.*, c.label, c.symbol
            FROM prices p
            JOIN currencies c ON p.currency_code = c.currency_code
            WHERE p.product_id = :product_id
        ", ['product_id' => $productId]);
    }
}
