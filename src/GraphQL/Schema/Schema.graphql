# src/GraphQL/Schema/schema.graphql

type Category {
  id: ID!
  name: String!
  products: [Product!]!
}

type Product {
  id: ID!
  name: String!
  inStock: Boolean!
  gallery: [String!]!
  description: String!
  category: Category!
  brand: String!
  attributes: [Attribute!]!
  prices: [Price!]!
}

type Attribute {
  id: ID!
  name: String!
  type: String!
  items: [AttributeItem!]!
}

type AttributeItem {
  id: ID!
  displayValue: String!
  value: String!
}

type Price {
  amount: Float!
  currency: Currency!
}

type Currency {
  label: String!
  symbol: String!
}

type Query {
  categories: [Category!]!
  category(id: ID!): Category
  products(categoryId: ID): [Product!]!
  product(id: ID!): Product
}

type Mutation {
  addToCart(productId: ID!, attributeValues: [AttributeInput!]!): CartItem!
  removeFromCart(cartItemId: ID!): Boolean!
  updateCartItemQuantity(cartItemId: ID!, quantity: Int!): CartItem!
  placeOrder(cartItems: [CartItemInput!]!): Order!
}

input AttributeInput {
  id: ID!
  value: String!
}

input CartItemInput {
  productId: ID!
  quantity: Int!
  attributeValues: [AttributeInput!]!
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  attributeValues: [AttributeItem!]!
}

type Order {
  id: ID!
  items: [OrderItem!]!
  total: Price!
  status: OrderStatus!
}

type OrderItem {
  product: Product!
  quantity: Int!
  attributeValues: [AttributeItem!]!
  price: Price!
}

enum OrderStatus {
  PENDING
  PROCESSING
  SHIPPED
  DELIVERED
}
